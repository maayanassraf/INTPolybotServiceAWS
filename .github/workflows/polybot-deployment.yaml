name: Polybot Microservice Deployment

on:
  push:
    paths:
      - 'polybot/**'
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd polybot
          
          # Login to docker & Building new image
          docker login -u ${{ secrets.DOCKER_REPO_USERNAME }} -p ${{ secrets.DOCKER_REPO_PASSWORD }}
          POLYBOT_IMAGE=maayanassraf/polybot-aws-project:${{ github.run_number }}
          docker build -t $POLYBOT_IMAGE .
          docker push $POLYBOT_IMAGE

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2
      - name: Get Polybot EC2's IP
        env:
          AWS_DEFAULT_REGION: eu-north-1
        run: |
          # Allows running aws commands
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          # Gets public ip from polybot ec2 by their tags (Gets only from running EC2s).
          POLYBOT_SERVERS_IP=$(aws ec2 describe-instances --filters "Name=tag:App,Values=Maayan-polybot"\
          --query 'Reservations[*].Instances[*].[PublicIpAddress]'\
          --output text | grep -v None)
          echo "The IPs of running Polybot EC2's are- $POLYBOT_SERVERS_IP"
          
          # Writes the POLYBOT_SERVERS_IP to github env- for using in another step
          {
          echo 'POLYBOT_SERVERS_IP<<EOF'
          echo "$POLYBOT_SERVERS_IP"
          echo EOF
          } >> "$GITHUB_ENV"

      - name: Deploy new version
        env:
          AWS_DEFAULT_REGION: eu-north-1
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |         
          # Gets from env only the IPs
          POLYBOT_SERVERS_IP=${POLYBOT_SERVERS_IP#*:}
          echo "The IPs of running Polybot EC2's are- $POLYBOT_SERVERS_IP"
          
          export POLYBOT_IMAGE=maayanassraf/polybot-aws-project:${{ github.run_number }}
          echo "polybot image - $POLYBOT_IMAGE"
          
          # Creates from secret the private key as file.
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          
          # Do the needed actions for every ec2 if its on (has public ip)
          for SERVER_IP in $(echo $POLYBOT_SERVERS_IP); 
          do 
            # Connects to ec2
            ssh -o StrictHostKeyChecking=no -i private_key ubuntu@${SERVER_IP} <<EOF
              POLYBOT_IMAGE=maayanassraf/polybot-aws-project:${{ github.run_number }}
              echo $POLYBOT_IMAGE
              # Deploys new polybot version and stops older version (if exists)
              docker ps | grep polybot 
              if [ $? -eq 0 ]
              then
                docker stop polybot 
                docker rm polybot 
              fi 
              # Starts new docker container from new image
              docker run -d -p 8443:8443 --restart always --name polybot $POLYBOT_IMAGE
              if [ $? -ne 0 ]
              then
                echo "docker run operation has failed in $SERVER_IP"
              fi
          EOF
          done

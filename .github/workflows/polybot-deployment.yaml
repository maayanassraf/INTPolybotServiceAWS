name: Polybot Microservice Deployment

on:
  push:
    paths:
      - 'polybot/**'
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd polybot
          
          # TODO your implementation here....
          docker login -u ${{ secrets.DOCKER_REPO_USERNAME }} -p ${{ secrets.DOCKER_REPO_PASSWORD }}
          POLYBOT_IMAGE=maayanassraf/polybot-aws-project:${{ github.run_number }}
          docker build -t $POLYBOT_IMAGE .
          docker push $POLYBOT_IMAGE

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2
      - name: Deploy new version
        env:
          AWS_DEFAULT_REGION: eu-north-1
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |         
          # allows running aws commands
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          # gets ip from polybot ec2 by their tags.
          POLYBOT_SERVERS_IP=$(aws ec2 describe-instances  --filters "Name=tag:App,Values=Maayan-polybot" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text)
          echo $POLYBOT_SERVERS_IP
          
          export POLYBOT_IMAGE=maayanassraf/polybot-aws-project:${{ github.run_number }}
          echo "polybot image - $POLYBOT_IMAGE"
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          # do the needed actions for every ec2 if its on (has public ip)
          for SERVER_IP in $(echo $POLYBOT_SERVERS_IP); 
          do 
            if [[ $SERVER_IP =~ [0-9] ]]; 
            then 
              # connect to ec2
              ssh -o StrictHostKeyChecking=no -i private_key ubuntu@${SERVER_IP} '
                POLYBOT_IMAGE=maayanassraf/polybot-aws-project:${{ github.run_number }}
                echo $POLYBOT_IMAGE
                # deploys new polybot version
                docker ps | grep polybot &&
                if [ $? -eq 0 ]
                then
                  docker stop polybot &&
                  docker rm polybot 
                fi &&
                docker run -p 8443:8443 --restart always --name polybot $POLYBOT_IMAGE &&
                if [ $? -ne 0 ]
                then
                  echo "docker run operation has failed in $SERVER_IP"
                fi
              '
            fi;
          done
